# Requests for IntelliJ, for easier testing! :D

### HasDOB
### Check if a student code requires a date of birth to log in.
POST http://localhost:4000/apiv2student/hasdob
Accept: application/json
Content-Type: application/x-www-form-urlencoded

code=test

### Login
### Login with a student code and date of birth.
POST http://localhost:4000/apiv2student/login
Accept: application/json
Content-Type: application/x-www-form-urlencoded

code=TESTDEVLOL2&dob=2010-01-01&recaptcha-token=no-token-available

### Get Code
### Get the student code by DOB.
POST http://localhost:4000/apiv2student/getcode
Accept: application/json
Content-Type: application/x-www-form-urlencoded

date=2010-01-01

### Ping
### Ping the server to get potentially new session ID and check for updates.
POST http://localhost:4000/apiv2student/ping
Accept: application/json
Content-Type: application/x-www-form-urlencoded

include_data=true

### Create Test Student
### Create a test student in the database.
POST http://localhost:4000/test/newstudent
Accept: application/json
Content-Type: application/x-www-form-urlencoded

name=Jeff Coat&code=2&avatarUrl=https://google.com&schoolId=1238

### Get Test Student
### Get a test student from the database.
GET http://localhost:4000/test/getstudent?studentId=1
Accept: application/json

### Create Test School
### Create a test student in the database.
POST http://localhost:4000/test/newschool
Accept: application/json
Content-Type: application/x-www-form-urlencoded

name=Faran Hight Primary&logo=https://google2.com&schoolId=1238

### Create New Announcement in School of logged in user
### Create a new announcement in the school of the logged in user.
POST http://localhost:4000/test/newannouncement
Accept: application/json
Content-Type: application/x-www-form-urlencoded
Authorization: Basic eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdHVkZW50X2lkIjoxLCJleHAiOjE3NDUzNTQ3MDJ9.mMmlqEroV-KJlgDyMTzGqIOOj2hWywX8w9I9O2my5nA 

title=Welcome Back, Year 10!&content=Welcome back to school, Year 10!&teacher=Mr T Pott
